package com.test;

import java.awt.BorderLayout;

import java.awt.Button;

import java.awt.Checkbox;

import java.awt.CheckboxGroup;

import java.awt.Color;

import java.awt.Dialog;

import java.awt.FlowLayout;

import java.awt.Font;

import java.awt.Frame;

import java.awt.GridLayout;

import java.awt.Label;

import java.awt.List;

import java.awt.Panel;

import java.awt.TextField;

import java.awt.event.ActionEvent;

import java.awt.event.ActionListener;

import java.awt.event.ItemEvent;

import java.awt.event.ItemListener;

import java.awt.event.WindowAdapter;

import java.awt.event.WindowEvent;

import java.util.ArrayList;

import java.util.StringTokenizer;



public class ManagerGUI

{

	Frame frame;

	Panel []panel;

	Label lblTitle,lblName,lblHeight,lblSex,lblAge,lblWeight;

	TextField  tfName,tfHeight,tfAge,tfWeight;

	Button btnSave,btnSearch,btnDelete,btnReset,btnUpdate;

	

	List list;

	Checkbox chMale, chFemale;

	CheckboxGroup chGroup;



	public ManagerGUI()

	{

			frame = new Frame("회원 관리");

			panel = new Panel[12]; //배열 선언

			for( int i = 0; i < panel.length ; i++)

			{

				panel[i] = new Panel(); //Panel Heap 메모리에 올린다

			}

			lblTitle = new Label("회원 관리", Label.CENTER);

			Font font = new Font("dialog" , Font.BOLD, 20);

			lblTitle.setFont(font);

			lblTitle.setForeground(new Color(123,54,32));

			lblName = new Label("이 름");

			lblHeight = new Label("키 ");

			lblSex = new Label("성 별");

			lblAge = new Label("연 령");

			lblWeight = new Label("체 중");

			

			tfName = new TextField("");

			tfHeight = new TextField("");

			tfAge = new TextField("");

			tfWeight = new TextField("");

			btnSave = new Button("저장");

			btnSearch = new Button("검색");

			btnDelete  = new Button("삭제");

			btnReset = new Button("지우기");

			btnUpdate = new Button("수정");







			list = new List(7,false);

			chGroup = new CheckboxGroup();

			chMale = new Checkbox("Male",chGroup,false);

			chFemale = new Checkbox("FeMale",chGroup,false);

		

	//프레임에 종료 버튼 처리		

			frame.addWindowListener( new WindowAdapter () {

				public void windowClosing(WindowEvent e){

					System.exit(0);

				}

		    });	

			

//리스트 부분 처리하는 메소드

		list.addItemListener( new ItemListener () {

				public void itemStateChanged(ItemEvent e) {

		        String str = list.getSelectedItem();

		        StringTokenizer st = new StringTokenizer(str);

		        tfName.setText(st.nextToken());

		        tfAge.setText(st.nextToken());

		        tfWeight.setText(st.nextToken());

		        tfHeight.setText(st.nextToken());

		        

		        String sex = st.nextToken();

		        if(sex.equals("여")){

		        	chFemale.setState(true); //414-22줄 chFeMale => chFemale

		        }else{

		        	chMale.setState(true);

		        }

		     }

	});	

//지우기 버튼에 기능을 주는 부분																	

		btnReset.addActionListener( new ActionListener () {

			public void actionPerformed(ActionEvent e) {

				 tfName.setText("");

	             tfAge.setText("");

	             tfHeight.setText("");

	             tfWeight.setText("");

	             chGroup.setSelectedCheckbox(null);

	   		}

		});

//저장 버튼에 기능을 주는 부분 																

		btnSave.addActionListener( new ActionListener () {

			public void actionPerformed(ActionEvent e) {

				

				String name = tfName.getText();

				String age = tfAge.getText();

				String weight = tfWeight.getText();

				String height = tfHeight.getText();

				String sex = "여";

				if(chMale.getState()){

					sex="남";

				}

				MemberDAO dao = new MemberDAO();

				dao.insert(name, age, height, weight, sex);

				displayAll();

			}

	});

//삭제 버튼에 기능을 주는 부분

		btnDelete.addActionListener( new ActionListener () {

			public void actionPerformed(ActionEvent e) {

				String  name = tfName.getText();

				MemberDAO dao = new MemberDAO();

				dao.delete(name);

				displayAll();

			}

		});	

//수정 버튼에 기능을 주는 부분

		btnUpdate.addActionListener( new ActionListener() {

			public void actionPerformed(ActionEvent e) {

	        String name = tfName.getText();

	        String age = tfAge.getText();

	        String height = tfHeight.getText();

	        String weight = tfWeight.getText();

	        String sex="남";

	        if(chFemale.getState()){

	        	sex = "여";

	        }

		MemberDAO dao = new MemberDAO();

		dao.update(name, age, height, weight, sex);

		displayAll();		

		

				}

			});	

//검색 버튼에 기능을 주는 부분

		btnSearch.addActionListener( new ActionListener () {

			public void actionPerformed(ActionEvent e) {

				String name = tfName.getText();

				MemberDAO dao =new MemberDAO();

//426페이지 21~38

				

				MemberDTO dto = null;

				try{

		     		   dto =  dao.search(name);

				}catch(RecordNotFoundException e1)

				  { final Dialog dialog = new Dialog(frame, "경고");

				    dialog.setLayout(new FlowLayout());

				    dialog.setSize(200,80);

				    dialog.setTitle(e1.getMessage());

				    Button btnOk = new Button("확인");

   //423page 

				 	//427쪽 30-34

				    btnOk.addActionListener(new ActionListener() {

						public void actionPerformed(ActionEvent e) {

						    dialog.dispose();

						}

					});

				   dialog.add(btnOk);

				   dialog.show();

				   return;

			} // end try~~catch

				

				tfName.setText(dto.getName());

				//tfName : 화면, dto.getName은 MemberDTO클래스의 변수로 연결 통로

				tfAge.setText(Integer.toString(dto.getAge()));

				tfHeight.setText(Integer.toString(dto.getHeight()));

				tfWeight.setText(Integer.toString(dto.getWeight()));

				//숫자형을 문자열로 바꾸어 주는 것

				String sex = Character.toString(dto.getSex());

				//문자형을 문자열로 바꾸어 주는 것

				if(sex.equals("여")){

					chFemale.setState(true);

				}else{

					chMale.setState(true);

				}

			}

 });

   	

}// end Manager 생성자  ==> 화면을 구성하기 위해서 해당 객체를 생성

	// 버튼에 기능을 넣을 메소드 선언 해 준다.







	public void launchFrame()

	{

		    panel[1].setLayout( new GridLayout(2,1));

			panel[1].add(lblName);

			panel[1].add(lblHeight);

			panel[2].setLayout( new GridLayout(2,1));

			panel[2].add(tfName);

			panel[2].add(tfHeight);

			panel[3].setLayout( new BorderLayout());

			panel[3].add(panel[1], "West");

			panel[3].add(panel[2], "Center");

			panel[3].add( new Label(" "), "East");

			panel[4].setLayout( new GridLayout(2,1));

			panel[4].add(lblAge);

			panel[4].add(lblWeight);

			panel[5].setLayout( new GridLayout(2,1));

			panel[5].add(tfAge);

			panel[5].add(tfWeight);

			panel[6].setLayout( new BorderLayout());

			panel[6].add(panel[4],"West");

			panel[6].add(panel[5],"Center");

			panel[7].setLayout( new GridLayout(1,2));

			panel[7].add(panel[3]);

			panel[7].add(panel[6]);

			panel[8].add(lblSex);

			panel[8].add(chMale);

			panel[8].add(chFemale);

			panel[9].setLayout( new BorderLayout());

			panel[9].add(lblTitle, "North");

			panel[9].add(panel[7], "Center");

			panel[9].add(panel[8], "South");

			panel[10].setLayout( new GridLayout(1,5));

			panel[10].setBackground(Color.black);

			panel[10].setForeground(Color.white);

			panel[10].add( new Label("이 름     "));

			panel[10].add( new Label("나 이     "));

			panel[10].add( new Label("체 중     "));

			panel[10].add( new Label(" 키       "));

			panel[10].add( new Label("성 별     "));

			panel[11].setLayout( new BorderLayout());

			panel[11].add(panel[10], "North");

			panel[11].add(list , "Center");

			panel[0].add(btnSave);

			panel[0].add( new Label(" "));

			panel[0].add(btnSearch);

			panel[0].add( new Label(" "));

			panel[0].add(btnDelete);

			panel[0].add( new Label(" "));

			panel[0].add(btnUpdate);

			panel[0].add( new Label(" "));

			panel[0].add(btnReset);




			frame.add(panel[9], "North");

			frame.add(panel[11], "Center");

			frame.add(panel[0], "South");

		//	frame.setSize(400,300);

		    frame.pack();




			frame.setResizable(false);// 크기 조절 불가

 frame.setLocation( ((frame.getToolkit().getScreenSize())

		   .width  -  frame.getWidth()) /2 ,

 ((frame.getToolkit().getScreenSize())

		 .height -  frame.getHeight())/ 2); 

    frame.setVisible(true);

	  //리스트보기 호출

		displayAll();

	}// end launchFrame()

	//화면 정보 보기

	public void displayAll() {

	   list.removeAll(); //리스트화면 클리어

	   MemberDAO dao = new MemberDAO();

	   ArrayList<MemberDTO> allData = dao.select();

	   

	   for(MemberDTO dto : allData){

		    String name = dto.getName();

		    int age = dto.getAge();

		    int height = dto.getHeight();

		    int weight = dto.getWeight();

		    char sex = dto.getSex();

      list.add(name+ "             " +age+ "                " +weight + "                " + height + "                 " + sex);

	   } 

 }




	public static void main(String [] args)

	{

			ManagerGUI  mem = new ManagerGUI();

			//화면구성하기 위한 준비, 버튼 기능 넣어주는

			mem.launchFrame();

			//프레임에 화면 붙이고,  select()호출

	}// end main()

}// end Manager class


